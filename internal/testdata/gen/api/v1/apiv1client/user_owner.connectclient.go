// Code generated by protoc-gen-connectclient-go DO NOT EDIT.
// source: api/v1/user_owner.proto

package apiv1client

import (
	context "context"
	v1 "github.com/mfridman/protoc-gen-connectclient-go/internal/testdata/gen/api/v1"
)

type OwnerServiceClient service

func (s *OwnerServiceClient) GetOwner(ctx context.Context, req *v1.GetOwnerRequest) (*v1.GetOwnerResponse, error) {
	resp := new(v1.GetOwnerResponse)
	if err := s.client.do(ctx, req, resp, "/api.v1.OwnerService/GetOwner"); err != nil {
		return nil, err
	}
	return resp, nil
}

type UserServiceClient service

func (s *UserServiceClient) GetUser(ctx context.Context, req *v1.GetUserRequest) (*v1.GetUserResponse, error) {
	resp := new(v1.GetUserResponse)
	if err := s.client.do(ctx, req, resp, "/api.v1.UserService/GetUser"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *UserServiceClient) CreateUser(ctx context.Context, req *v1.CreateUserRequest) (*v1.CreateUserResponse, error) {
	resp := new(v1.CreateUserResponse)
	if err := s.client.do(ctx, req, resp, "/api.v1.UserService/CreateUser"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *UserServiceClient) UpdateUser(ctx context.Context, req *v1.UpdateUserRequest) (*v1.UpdateUserResponse, error) {
	resp := new(v1.UpdateUserResponse)
	if err := s.client.do(ctx, req, resp, "/api.v1.UserService/UpdateUser"); err != nil {
		return nil, err
	}
	return resp, nil
}

func (s *UserServiceClient) DeleteUser(ctx context.Context, req *v1.DeleteUserRequest) (*v1.DeleteUserResponse, error) {
	resp := new(v1.DeleteUserResponse)
	if err := s.client.do(ctx, req, resp, "/api.v1.UserService/DeleteUser"); err != nil {
		return nil, err
	}
	return resp, nil
}
